import { GuildMember } from "./guild-member.js";
import type { Channel } from "./channel.js";
import type { Client } from "../client.js";
import type { DefaultMessageNotificationLevel, ExplicitContentFilterLevel, VerificationLevel, GuildNSFWLevel, PremiumTier, MFALevel, Locale } from "#enums";
import type { GuildScheduleEventStructure, UnavailableGuildStructure, PresenceUpdateEventFields, WelcomeScreenStructure, StageInstanceStructure, VoiceStateStructure, NewGuildStructure, StickerStructure, EmojiStructure, GuildStructure, RoleStructure, GuildFeatures } from "../typings/index.js";
export declare function guildFactory(client: Client, guild: NewGuildStructure): NewGuild;
export declare function guildFactory(client: Client, guild: UnavailableGuildStructure): UnavailableGuildStructure;
export declare function guildFactory(client: Client, guild: GuildStructure): Guild;
export declare function guildFactory(client: Client, guild: UnavailableGuildStructure | NewGuildStructure): UnavailableGuildStructure | NewGuild;
export declare class Guild {
    readonly id: string;
    readonly name: string;
    readonly icon: string | null;
    readonly iconHash: string | undefined | null;
    readonly splash: string | null;
    readonly discoverySplash: string | null;
    readonly owner: boolean | undefined;
    readonly ownerId: string;
    readonly permissions: string | undefined;
    readonly afkChannelId: string | null;
    readonly afkTimeout: number;
    readonly widgetEnabled: boolean | undefined;
    readonly widgetChannelId: string | undefined | null;
    readonly verificationLevel: VerificationLevel;
    readonly defaultMessageNotifications: DefaultMessageNotificationLevel;
    readonly explicitContentFilter: ExplicitContentFilterLevel;
    readonly roles: Array<RoleStructure>;
    readonly emojis: Array<EmojiStructure>;
    readonly features: Array<GuildFeatures>;
    readonly mfaLevel: MFALevel;
    readonly applicationId: string | null;
    readonly systemChannelId: string | null;
    readonly systemChannelFlags: number;
    readonly rulesChannelId: string | null;
    readonly maxPresences: number | undefined | null;
    readonly maxMembers: number | undefined;
    readonly vanityUrlCode: string | null;
    readonly description: string | null;
    readonly banner: string | null;
    readonly premiumTier: PremiumTier;
    readonly premiumSubscriptionCount: number;
    readonly preferredLocale: Locale;
    readonly publicUpdatesChannelId: string | null;
    readonly maxVideoChannelUsers: number | undefined;
    readonly maxStageVideoChannelUsers: number | undefined;
    readonly approximateMemberCount: number | undefined;
    readonly approximatePresenceCount: number | undefined;
    readonly welcomeScreen: WelcomeScreenStructure | undefined;
    readonly nsfwLevel: GuildNSFWLevel;
    readonly stickers: Array<StickerStructure>;
    readonly premiumProgressBarEnabled: boolean;
    readonly safetyAlertsChannelId: string | null;
    readonly client: Client;
    constructor(client: Client, guild: GuildStructure);
}
export declare class NewGuild extends Guild {
    readonly joinedAt: string;
    readonly large: boolean;
    readonly unavailable: boolean;
    readonly memberCount: number;
    readonly voiceStates: Array<Partial<VoiceStateStructure>>;
    readonly members: Array<GuildMember>;
    readonly channels: Array<Channel>;
    readonly threads: Array<Channel>;
    readonly presences: Array<Partial<PresenceUpdateEventFields>>;
    readonly stageInstances: Array<StageInstanceStructure>;
    readonly guildScheduledEvents: Array<GuildScheduleEventStructure>;
    constructor(client: Client, guild: NewGuildStructure);
}
//# sourceMappingURL=guild.d.ts.map