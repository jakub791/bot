import type { EmbedThumbnailStructure, EmbedProviderStructure, EmbedAuthorStructure, EmbedFooterStructure, EmbedFieldStructure, EmbedImageStructure, EmbedVideoStructure, EmbedStructure } from "lilybird";
export declare function Embed({ title, description, url, timestamp, color, children }: {
    title?: string;
    description?: string;
    url?: string;
    timestamp?: boolean | Date | number;
    color?: number;
    children?: Array<EmbedComponent> | EmbedComponent;
}): EmbedStructure;
interface FooterComponent {
    type: "footer";
    data: EmbedFooterStructure;
}
interface ImageComponent {
    type: "image";
    data: EmbedImageStructure;
}
interface ThumbnailComponent {
    type: "thumbnail";
    data: EmbedThumbnailStructure;
}
interface VideoComponent {
    type: "video";
    data: EmbedVideoStructure;
}
interface ProviderComponent {
    type: "provider";
    data: EmbedProviderStructure;
}
interface AuthorComponent {
    type: "author";
    data: EmbedAuthorStructure;
}
interface FieldComponent {
    type: "field";
    data: EmbedFieldStructure;
}
type EmbedComponent = FooterComponent | ImageComponent | ThumbnailComponent | VideoComponent | ProviderComponent | AuthorComponent | FieldComponent;
export declare function EmbedFooter(props: EmbedFooterStructure): FooterComponent;
export declare function EmbedImage(props: EmbedImageStructure): ImageComponent;
export declare function EmbedThumbnail(props: EmbedThumbnailStructure): ThumbnailComponent;
export declare function EmbedVideo(props: EmbedVideoStructure): VideoComponent;
export declare function EmbedProvider(props: EmbedProviderStructure): ProviderComponent;
export declare function EmbedAuthor(props: EmbedAuthorStructure): AuthorComponent;
export declare function EmbedField(props: EmbedFieldStructure): FieldComponent;
export {};
//# sourceMappingURL=embed.d.ts.map