import type { SelectDefaultValueStructure, MessageComponentStructure, SelectOptionStructure, SelectMenuStructure, ActionRowStructure, TextInputStructure, ButtonStructure, EmojiStructure, ChannelType, ButtonStyle } from "lilybird";
export declare function ActionRow({ children }: {
    children: Array<Exclude<MessageComponentStructure, ActionRowStructure>> | Exclude<MessageComponentStructure, ActionRowStructure>;
}): ActionRowStructure;
export declare function Button(props: {
    id: string;
    style: Exclude<ButtonStyle, ButtonStyle.Link>;
    label?: string;
    emoji?: Pick<EmojiStructure, "name" | "id" | "animated">;
    disabled?: boolean;
} | {
    url: string;
    style: ButtonStyle.Link;
    label?: string;
    emoji?: Pick<EmojiStructure, "name" | "id" | "animated">;
    disabled?: boolean;
}): ButtonStructure;
export declare function TextInputModal({ id, style, label, min_length, max_length, required, value, placeholder }: Omit<TextInputStructure, "custom_id" | "type"> & {
    id: string;
}): TextInputStructure;
interface BaseSelectMenuOptions {
    id: string;
    placeholder?: string;
    min_values?: number;
    max_values?: number;
    disabled?: boolean;
}
export declare function StringSelectMenu({ id, placeholder, min_values, max_values, disabled, children }: BaseSelectMenuOptions & {
    children: Array<SelectOptionStructure> | SelectOptionStructure;
}): SelectMenuStructure;
export declare function UserSelectMenu({ id, placeholder, min_values, max_values, disabled, children }: BaseSelectMenuOptions & {
    children?: Array<SelectDefaultValueStructure> | SelectDefaultValueStructure;
}): SelectMenuStructure;
export declare function RoleSelectMenu({ id, placeholder, min_values, max_values, disabled, children }: BaseSelectMenuOptions & {
    children?: Array<SelectDefaultValueStructure> | SelectDefaultValueStructure;
}): SelectMenuStructure;
export declare function MentionableSelectMenu({ id, placeholder, min_values, max_values, disabled, children }: BaseSelectMenuOptions & {
    children?: Array<SelectDefaultValueStructure> | SelectDefaultValueStructure;
}): SelectMenuStructure;
export declare function ChannelSelectMenu({ id, placeholder, min_values, max_values, channel_types, disabled, children }: BaseSelectMenuOptions & {
    channel_types?: Array<ChannelType>;
    children?: Array<SelectDefaultValueStructure> | SelectDefaultValueStructure;
}): SelectMenuStructure;
export {};
//# sourceMappingURL=components.d.ts.map