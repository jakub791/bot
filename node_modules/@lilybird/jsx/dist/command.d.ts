import type { SubCommandApplicationCommandOptionStructure, NumericApplicationCommandOptionStructure, ApplicationCommandOptionChoiceStructure, StringApplicationCommandOptionStructure, BaseApplicationCommandOptionStructure, ApplicationCommandOptionStructure, POSTApplicationCommandStructure, CommandWithAutocomplete, PermissionFlag, Locale } from "lilybird";
export declare function ApplicationCommand({ name, description, defaultMemberPermissions, dmPermission, name_localizations, description_localizations, nsfw, children }: {
    name: string;
    description: string;
    defaultMemberPermissions?: Array<PermissionFlag> | null;
    dmPermission?: boolean | null;
    nsfw?: boolean;
    name_localizations?: Record<Locale, string> | null;
    description_localizations?: Record<Locale, string> | null;
    children?: Array<ApplicationCommandOptionStructure>;
}): POSTApplicationCommandStructure;
type CommandWithChildren<T> = T & {
    children?: Array<ApplicationCommandOptionChoiceStructure>;
};
export declare function CommandOptions(props: ApplicationCommandOptionChoiceStructure): ApplicationCommandOptionChoiceStructure;
export declare function SubCommandOption(props: Omit<Omit<SubCommandApplicationCommandOptionStructure, "options"> & {
    children?: Array<ApplicationCommandOptionStructure>;
}, "type">): ApplicationCommandOptionStructure;
export declare function SubCommandGroupOption(props: Omit<Omit<SubCommandApplicationCommandOptionStructure, "options"> & {
    children: Array<ApplicationCommandOptionStructure>;
}, "type">): ApplicationCommandOptionStructure;
type StringCommandOption = Omit<StringApplicationCommandOptionStructure, "type">;
export declare function StringOption(props: CommandWithChildren<StringCommandOption> | CommandWithAutocomplete<StringCommandOption>): ApplicationCommandOptionStructure;
type NumericCommandOption = Omit<NumericApplicationCommandOptionStructure, "type">;
export declare function IntegerOption(props: CommandWithChildren<NumericCommandOption> | CommandWithAutocomplete<NumericCommandOption>): ApplicationCommandOptionStructure;
export declare function BooleanOption(props: Omit<BaseApplicationCommandOptionStructure, "type">): ApplicationCommandOptionStructure;
export declare function UserOption(props: Omit<BaseApplicationCommandOptionStructure, "type">): ApplicationCommandOptionStructure;
export declare function ChannelOption(props: Omit<BaseApplicationCommandOptionStructure, "type">): ApplicationCommandOptionStructure;
export declare function RoleOption(props: Omit<BaseApplicationCommandOptionStructure, "type">): ApplicationCommandOptionStructure;
export declare function MentionableOption(props: Omit<BaseApplicationCommandOptionStructure, "type">): ApplicationCommandOptionStructure;
export declare function NumberOption(props: CommandWithChildren<NumericCommandOption> | CommandWithAutocomplete<NumericCommandOption>): ApplicationCommandOptionStructure;
export declare function AttachmentOption(props: Omit<BaseApplicationCommandOptionStructure, "type">): ApplicationCommandOptionStructure;
export {};
//# sourceMappingURL=command.d.ts.map